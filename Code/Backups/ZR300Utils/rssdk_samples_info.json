[
    {
        "example": {
            "author": "Intel(R) Corporation", 
            "category": "RealSense(TM) SDK", 
            "cxxflags": "-std=c++11", 
            "date": "07/08/2016", 
            "description": "", 
            "ldflags": "-lrs_record -lrs_image -lrs_log_utils -lrealsense -lpthread -lopencv_imgproc -lopencv_core", 
            "main": "record_sample.cpp", 
            "name": "Record Sample", 
            "platform": {
                "hwreq": [
                    "zr300"
                ], 
                "libs": [
                    ""
                ]
            }
        }, 
        "path": "record_sample"
    }, 
    {
        "example": {
            "author": "Intel(R) Corporation", 
            "category": "RealSense(TM) SDK", 
            "cxxflags": "-std=c++11", 
            "date": "07/08/2016", 
            "description": "", 
            "ldflags": "-lrs_playback -lrs_image -lrs_log_utils -pthread -lrealsense -lopencv_imgproc -lopencv_core", 
            "main": "playback_sample.cpp", 
            "name": "Playback Sample", 
            "platform": {
                "hwreq": [
                    "zr300"
                ], 
                "libs": [
                    ""
                ]
            }
        }, 
        "path": "playback_sample"
    }, 
    {
        "example": {
            "author": "Intel(R) Corporation", 
            "category": "RealSense(TM) SDK", 
            "cxxflags": "-std=c++11", 
            "date": "22/08/2016", 
            "description": "This sample demonstrates an application usage of a computer vision module, which implements asynchronous samples processing.  The video module implements the video module interface, which is a common way for the application or SDK to interact with the module.  It also implements a module specific interface, in this example - the module calculates the maximal depth value in the image.", 
            "ldflags": "-lrealsense -lrs_max_depth_value_module -lrs_image -lrs_playback -lrs_log_utils -lrs_projection -lpthread -lopencv_imgproc -lopencv_core", 
            "main": "video_module_async_sample.cpp", 
            "name": "Video Module Asynchronized Sample", 
            "platform": {
                "hwreq": [
                    "zr300"
                ], 
                "libs": [
                    ""
                ]
            }
        }, 
        "path": "video_module_async_sample"
    }, 
    {
        "example": {
            "author": "Intel(R) Corporation", 
            "category": "RealSense(TM) SDK", 
            "cxxflags": "-std=c++11", 
            "date": "15/08/2016", 
            "description": "", 
            "ldflags": "-lrealsense", 
            "main": "fps_counter_sample.cpp", 
            "name": "Fps Counter Sample", 
            "platform": {
                "hwreq": [
                    "zr300"
                ], 
                "libs": [
                    ""
                ]
            }
        }, 
        "path": "fps_counter_sample"
    }, 
    {
        "example": {
            "author": "Intel(R) Corporation", 
            "category": "RealSense(TM) SDK", 
            "cxxflags": "-std=c++11", 
            "date": "22/08/2016", 
            "description": "", 
            "ldflags": "-lrs_projection -lrs_image -lrealsense -lopencv_imgproc -lopencv_core", 
            "main": "projection_sample.cpp", 
            "name": "Projection Sample", 
            "platform": {
                "hwreq": [
                    "zr300"
                ], 
                "libs": [
                    ""
                ]
            }
        }, 
        "path": "projection_sample"
    }, 
    {
        "example": {
            "author": "Intel(R) Corporation", 
            "category": "RealSense(TM) SDK", 
            "cxxflags": "-std=c++11", 
            "date": "23/08/2016", 
            "description": "This sample demonstrates an application usage of a computer vision module, which implements a synchronous samples processing.  The video module implements the video module interface, which is a common way for the application or SDK to interact with the module. It also implements a module specific interface, in this example - the module calculates the maximal depth value in the image.", 
            "ldflags": "-lrs_max_depth_value_module -lrs_image -lrs_playback -lrs_projection -lrs_log_utils -lrealsense -lpthread -lopencv_imgproc -lopencv_core", 
            "main": "video_module_sync_sample.cpp", 
            "name": "Video Module Synchronized Sample", 
            "platform": {
                "hwreq": [
                    "zr300"
                ], 
                "libs": [
                    ""
                ]
            }
        }, 
        "path": "video_module_sync_sample"
    }, 
    {
        "example": {
            "author": "Intel(R) Corporation", 
            "category": "RealSense(TM) SDK", 
            "cxxflags": "-std=c++11", 
            "date": "22/08/2016", 
            "description": "", 
            "ldflags": "-lrs_samples_time_sync -lrs_image -lrealsense -lrs_log_utils -lopencv_imgproc -lopencv_core", 
            "main": "samples_time_sync_sample.cpp", 
            "name": "Time Sync Sample", 
            "platform": {
                "hwreq": [
                    "zr300"
                ], 
                "libs": [
                    ""
                ]
            }
        }, 
        "path": "samples_time_sync_sample"
    }
]
